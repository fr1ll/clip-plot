# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/06_web_config.ipynb.

# %% auto 0
__all__ = ['get_clip_plot_root', 'replace_web_strings', 'copy_web_assets']

# %% ../nbs/06_web_config.ipynb 4
from . import utils
from .utils import get_version
from fastcore.all import *
import os
from pathlib import Path

# %% ../nbs/06_web_config.ipynb 5
def get_clip_plot_root() -> Path:
    # ipython doesn't have __file__ attribute
    if in_ipython():
        return Path(utils.__file__).parents[1]
    else:
        return Path(__file__).parents[1]

# %% ../nbs/06_web_config.ipynb 6
def replace_web_strings(web_dir: Path, from_to: dict):
    '''sequentially replace strings based on dict'''
    for i in ["index.html", "assets/js/tsne.js"]:
        f = web_dir / i
        t = f.read_text()
        for k, v in from_to.items():
            t.replace(k, v)
        f.write_text(t)


# %% ../nbs/06_web_config.ipynb 7
def copy_web_assets(out_dir: str, tagline: str) -> None:
    """Copy the /web directory from the clipplot source to the users cwd.
    Copies version number into assets.
    
    Args: 
        out_dir (str): directory to copy web assets

    Returns:
        None
    """
    copy_root_dir = get_clip_plot_root()
    src = copy_root_dir / "clip_plot/web"

    # resolve will handle cases with ../ in the path
    dest = Path.cwd() / Path(out_dir).resolve()
    utils.copytree_agnostic(src.as_posix(), dest.as_posix())

    # write version numbers into output
    replace_web_strings(dest, {"VERSION_NUMBER": get_version(),
                               "Image Fields in a Local Collection": tagline
                               })
