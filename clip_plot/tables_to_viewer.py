# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/11_tables_to_viewer.ipynb.

# %% auto 0
__all__ = ['tables_to_viewer_pipeline', 'tables_to_viewer_cli']

# %% ../nbs/11_tables_to_viewer.ipynb 2
from typing import Literal
from pathlib import Path
from copy import deepcopy

import pandas as pd
from pydantic_settings import CliApp

from .configuration import Cfg
from .utils import timestamp
from .web_config import copy_web_assets
from .images import ImageFactory
from .metadata import get_manifest, write_metadata
from .images import create_atlases_and_thumbs, ImageFactory


from .from_tables import glob_to_tables, table_to_meta

# %% ../nbs/11_tables_to_viewer.ipynb 3
_D = Cfg() # defaults

# %% ../nbs/11_tables_to_viewer.ipynb 4
def tables_to_viewer_pipeline(
    tables: list[Path] = deepcopy(_D.paths.tables),
    output_dir: Path = deepcopy(_D.paths.output_dir),
    tagline: str = deepcopy(_D.tagline),
    logo: str = deepcopy(_D.logo),
):
    """
    From a set of tables with embed_path and image_path columns,
    generate a clipplot viewer
    """
    print(timestamp(), "Starting image processing pipeline.")
    df = cat_tables(tables, table_format=tables[0].suffix)
    metadata = table_to_meta(df)

    copy_web_assets(out_dir=output_dir.as_posix(),
                    tagline=tagline, logo=logo)
    image_engine = ImageFactory(data_dir=output_dir/"data",
                                meta_dir=None,
                                img_path=df["image_path"].tolist(),
                                )

    write_metadata(image_engine)
    # embeddings = //

    kwargs["atlas_dir"], atlas_data = create_atlases_and_thumbs(imageEngine, kwargs["plot_id"], kwargs["use_cache"])
    get_manifest(imageEngine, atlas_data, **kwargs)
    print(timestamp(), "Done!")




# %% ../nbs/11_tables_to_viewer.ipynb 5
def tables_to_viewer_cli():
    """
    run embed_to_tables with CLI defined
    from pydantic-settings configuration object
    """
    cfg = CliApp.run(Cfg)
    tables_to_viewer_pipeline(
        tables=cfg.paths.tables,
        tagline=cfg.viewer.tagline,
        logo=cfg.viewer.logo,
        output_dir=cfg.paths.output_dir,
        table_format=cfg.paths.table_format
    )
